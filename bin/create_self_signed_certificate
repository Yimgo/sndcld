#!/usr/bin/env bash
# create a self-signed certificate for usage by the web application.
# inspired of
# http://blog.nategood.com/client-side-certificate-authentication-in-ngi

readonly SSL_PATH="$1"
readonly CA_KEY="${SSL_PATH}/ca.key"
readonly CA_CERT="${SSL_PATH}/ca.crt"
readonly SERVER_KEY="${SSL_PATH}/server.key"
readonly SERVER_CERT="${SSL_PATH}/server.crt"
readonly SERVER_REQUEST="${SSL_PATH}/server.csr"

function init_ca {
  openssl genrsa -out "${CA_KEY}" 4096
  openssl req -new -x509 -days 365 -key "${CA_KEY}" -out "${CA_CERT}"
}

function gen_server_key_plus_request {
  openssl genrsa -out "${SERVER_KEY}" 1024
  openssl req -new -key "${SERVER_KEY}" -out "${SERVER_REQUEST}"
}

function gen_signed_cert {
  openssl x509 -req -days 365 -in "${SERVER_REQUEST}" -CA "${CA_CERT}" \
    -CAkey "${CA_KEY}" -set_serial 01 -out "${SERVER_CERT}"
}

function usage {
  cat << EOF
Usage: ${0##*/} DESTINATION
Create self-signed certificate required by the web application.

    DESTINATION  store the certificates in DESTINATION.
EOF
}

function main {
  [[ -d "${SSL_PATH}" ]] || ( usage && return 1 )
  init_ca
  gen_server_key_plus_request
  gen_signed_cert
  rm -f "${SERVER_REQUEST}"
}

main || exit 1
